---
- hosts: all
  become: true
  
  tasks:
    - name: Install system development packages
      dnf:
        name:
          - git
          - clang
          - llvm
          - make
          - curl
          - openssl-devel
          - zlib-devel
          - bzip2-devel
          - readline-devel
          - sqlite-devel
          - ncurses-devel
          - xz-devel
          - tk-devel
          - libffi-devel
          - patch
          - python3-devel
        state: present

    - name: Add Docker repository
      yum_repository:
        name: docker-ce-stable
        description: Docker CE Stable - $basearch
        baseurl: https://download.docker.com/linux/fedora/$releasever/$basearch/stable
        enabled: true
        gpgcheck: true
        gpgkey: https://download.docker.com/linux/fedora/gpg

    - name: Install Docker Engine
      dnf:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present

    - name: Start and enable Docker service
      systemd:
        name: docker
        state: started
        enabled: true

    - name: Add user to docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: true

    - name: Install Podman Compose
      dnf:
        name: podman-compose
        state: present
    - name: Install gh cli
      command: |
        dnf install dnf5-plugins
        dnf config-manager addrepo --from-repofile=https://cli.github.com/packages/rpm/gh-cli.repo
        dnf install gh --repo gh-cli

- hosts: all
  become: false
  tasks:
    - name: Install Rust and Cargo
      shell: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
        source $HOME/.cargo/env
      args:
        creates: "{{ ansible_env.HOME }}/.cargo/bin/rustc"

    - name: Install pyenv
      shell: |
        curl https://pyenv.run | bash
      args:
        creates: "{{ ansible_env.HOME }}/.pyenv/bin/pyenv"

    - name: Configure shell for pyenv
      blockinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        block: |
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          eval "$(pyenv init --path)"
          eval "$(pyenv init -)"
          export PATH="$HOME/.cargo/bin:$PATH"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - dev tools"
        create: true

    - name: Install uv
      shell: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
      args:
        creates: "{{ ansible_env.HOME }}/.cargo/bin/uv"

    - name: Install Poetry
      shell: |
        curl -sSL https://install.python-poetry.org | python3 -
      args:
        creates: "{{ ansible_env.HOME }}/.local/bin/poetry"

    - name: Add Poetry to PATH
      blockinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        block: |
          export PATH="$HOME/.local/bin:$PATH"
        marker: "# {mark} ANSIBLE MANAGED BLOCK - poetry"
        create: true
    - name: Install VSCode
      command: |
        rpm --import https://packages.microsoft.com/keys/microsoft.asc
        echo -e "[code]\nname=Visual Studio Code\nbaseurl=https://packages.microsoft.com/yumrepos/vscode\nenabled=1\nautorefresh=1\ntype=rpm-md\ngpgcheck=1\ngpgkey=https://packages.microsoft.com/keys/microsoft.asc" | sudo tee /etc/yum.repos.d/vscode.repo > /dev/null
        dnf check-update
        dnf install code -y

    - name: Install Cursor
      shell: |
        curl -fsSL https://install.cursor.sh | bash
      args:
        warn: false
      
